potencia        EQU     b400h


                
                ORIG    4000h

altura          WORD    8        ;altura
seed            WORD    4        ;semente

                ORIG    4020h
terrenojogo     TAB     80

                
                ORIG    0000h              
                MVI     R6, 6000h
                
teste:          MVI     R1, terrenojogo
                MVI     R2, 80 ; Número de colunas do terreno de jogo

                MVI     R4, 4
                STOR    M[R1], R4 ; coloca o número 4 na coluna mais à esquerda
                
                MVI     R4, 80
                ADD     R5, R1, R4 ; coloca endereço da coluna mais à direita em R5
                
                MVI     R4, 3
                STOR    M[R5], R4 ; coloca o número 3 na coluna mais à direita
                
                
principal:      MVI     R1, terrenojogo
                MVI     R2, 80 ; Número de colunas do terreno de jogo
                JAL     atualizajogo
                BR      principal
                
fim:            BR      fim
               
atualizajogo:   DEC     R6
                STOR    M[R6], R4 ; Guarda o valor original de R4
                DEC     R6
                STOR    M[R6], R5 ; Guarda o valor original de R5

loop:           MOV     R5, R1 ; R5 = endereço da coluna n
                
                INC     R1 ; endereço da coluna n + 1
                
                LOAD    R4, M[R1]; R4 = valor contido na coluna n + 1
                
                STOR    M[R5], R4 ; Guarda valor da coluna n + 1 na coluna n
                
                DEC     R2
                
                CMP     R2, R0
                BR.NZ   loop
                
                DEC     R6
                STOR    M[R6], R7
                DEC     R6
                STOR    M[R6], R1 ; Guarda endereço coluna mais à direita
                
                MVI     R4, altura ; Definição do argumento de geracacto                
                LOAD    R1, M[R4] ; r1 = altura
                
                                
                MVI     R4, seed 
                LOAD    R5, M[R4] ; r5 = seed  

                JAL     geracacto
                
                LOAD    R1, M[R6] ; Recupera endereço coluna mais à direita
                INC     R6
                
                STOR    M[R1], R3 ; Guarda na coluna mais à direita o valor do cacto gerado aleatoriamente
                
                LOAD    R7, M[R6]
                INC     R6
                
                LOAD    R5, M[R6] ; Retomar valor original de R5
                INC     R6
                LOAD    R4, M[R6] ; Retomar valor original de R4
                INC     R6
     
                JMP     R7

geracacto:      DEC     R6
                STOR    M[R6], R4 ; Guarda o valor original de R4
                DEC     R6
                STOR    M[R6], R5 ; Guarda o valor original de R5              
                
                MVI     R4, 1        
                AND     R4, R5, R4 ; r4 irá ser o bit, bit = x & 1
                SHR     R5 ; x = x >> 1
                CMP     R4, R0 ;if bit: (se bit for o, logo False            
                BR.Z    pont ;          salta para pont)
                
                MVI     R4, potencia        
                XOR     R5, R5, R4 ; x = XOR(x, b400h)
                
pont:           MVI     R4, F332h ; if x < 62258
                CMP     R5, R4
                BR.NC   final                
                
                MVI     R3, 0 ;return 0
                
                MVI     R4, seed ; x é global
                STOR    M[R4], R5
                
                LOAD    R5, M[R6] ; Retomar valor original de R5
                INC     R6
                LOAD    R4, M[R6] ; Retomar valor original de R4
                INC     R6
                
                JMP     R7 
                
final:          DEC     R1 ; return (x & (altura - 1)) + 1
                AND     R3, R1, R5
                INC     R3
                
                MVI     R4, seed ; x é global
                STOR    M[R4], R5
                
                LOAD    R5, M[R6] ; Retomar valor original de R5
                INC     R6
                LOAD    R4, M[R6] ; Retomar valor original de R4
                INC     R6
                
                JMP     R7
